<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:local="clr-namespace:RAProject"
        xmlns:ToggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Name="wndMain" x:Class="RAProject.MainWindow"
    xmlns:gif="http://wpfanimatedgif.codeplex.com"    
    mc:Ignorable="d"
        Title="RetroAchievements Browser" Background="Teal" Height="872" Width="1104" FontFamily="Bahnschrift Light">
    <Window.Resources>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsNewItem" Value="True">
                    <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="#FF00CBCB"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
        <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Height" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeNS"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridRowHeaderStyle1" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Background" Value="#FF00CBCB"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                                </StackPanel>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
                            <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Menu x:Name="menu" Height="20" Margin="0" VerticalAlignment="Top" Foreground="White" FontFamily="Bahnschrift Light">
            <MenuItem Header="File" Foreground="Black">
                <MenuItem x:Name="miSaveFile" Header="Save Data" Click="miSaveFile_Click"/>
                <MenuItem x:Name="miLoadData" Header="Load Data From File..." Click="miLoadData_Click"/>
                <Separator/>
                <MenuItem x:Name="menuExit" Header="Exit" Click="menuExit_Click" Foreground="Black"/>
            </MenuItem>
            <MenuItem Header="Display" Foreground="Black">
                <MenuItem x:Name="miVisualStyles" Header="Visual Style" Checked="VisualStyles_Checked" Unchecked="VisualStyles_Checked" IsCheckable="True" Foreground="Black"/>
            </MenuItem>
            <MenuItem Header="Help" Foreground="Black">
                <MenuItem x:Name="miLaunchHelp" Header="Help" Click="miLaunchHelp_Click"/>
                <MenuItem Header="About"/>
            </MenuItem>
            <MenuItem Header="Download" Foreground="Black" Visibility="Hidden">
                <MenuItem x:Name="miDownloadAllData" Header="All Data" Click="miDownloadAllData_Click"/>
                <MenuItem x:Name="miDownloadConsoles" Header="Consoles" Click="miDownloadConsoles_Click"/>
                <MenuItem Header="Games"/>
                <MenuItem Header="Achievements"/>
            </MenuItem>
        </Menu>
        <Grid Margin="0,20,0,0">
            <Grid.Resources>
                <Style x:Key="NormalStyle">

                    <Style.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="true">
                            <Setter Property="Control.Background" Value="#FF00CBCB"/>
                            <Setter Property="Control.Foreground" Value="Purple"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="Control.Background" Value="Teal"/>
                            <Setter Property="Control.Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <ToolBar x:Name="toolBarMain" Background="Teal" VerticalAlignment="Top" Margin="0">
                <Button x:Name="btnSearch" Foreground="White" FontSize="14" Height="26" Margin="20,0,0,2" Click="btnSearch_Click" Cursor="Hand">
                    <iconPacks:PackIconMaterial Kind="TextSearch"  VerticalAlignment="Center" HorizontalAlignment="Center" />
                </Button>
                <TextBox x:Name="txtSearchQuery" Width="250" Background="Transparent" Foreground="White" SelectionBrush="#FFFFA200" BorderBrush="White" Text="Enter search query..." Height="26" Margin="0,5,0,9" FontFamily="Bahnschrift Light" GotFocus="txtSearchQuery_GotFocus" KeyDown="txtSearchQuery_KeyDown"/>
                <ComboBox x:Name="cmbSearchCategory" SelectedIndex="1" Width="179" HorizontalContentAlignment="Center" Height="26" FontFamily="Bahnschrift Light" FontSize="20" Margin="0,5,50,9" Background="Transparent" Foreground="White" FontWeight="Bold" OpacityMask="Teal" >
                    <ComboBoxItem Content="Consoles" HorizontalAlignment="Left"/>
                    <ComboBoxItem Content="Games" HorizontalAlignment="Left"/>
                    <ComboBoxItem Content="Achievements" HorizontalAlignment="Left"/>
                </ComboBox>


                <Separator />

                <Label x:Name="lblCurrentConsole" Foreground="White" FontWeight="Bold" FontSize="20" Margin="100,0,0,0">?</Label>
                <iconPacks:PackIconMaterial x:Name="icoTrackerArrow" Kind="ArrowRightBold"  VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="20,0,20,7" />
                <Label x:Name="lblCurrentGame" Foreground="White" FontWeight="Bold" FontSize="20">?</Label>
            </ToolBar>
            <TabControl x:Name="tabControl" Margin="0,35,0,0" TabStripPlacement="Left" BorderBrush="#00000000" FontFamily="Bahnschrift Light" FontSize="14" ScrollViewer.HorizontalScrollBarVisibility="Auto" Background="Transparent">

                <TabItem Selector.Selected="tabUserProfile_Selected" Style="{DynamicResource tabStylings}" x:Name="tabUserProfile" Header="User Profile" Margin="0,0,0,0" Height="50" Width="150" FontSize="16" BorderThickness="3,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <StackPanel x:Name="bgUserProfile" Background="#FF00575A" ScrollViewer.CanContentScroll="True" >

                            <StackPanel Orientation="Horizontal">
                                <GroupBox x:Name="groupBox" Header="User Profile" Height="188" VerticalAlignment="Top" Margin="10,0,10,10" Width="400" Foreground="White" HorizontalAlignment="Left">
                                    <Grid>
                                        <Image x:Name="imgUserAvatar" HorizontalAlignment="Left" Height="150" Margin="5,6,0,0" VerticalAlignment="Top" Width="150" Panel.ZIndex="2"/>
                                        <Label x:Name="lblUsername" Content="Label" HorizontalAlignment="Left" Margin="168,6,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" FontSize="20" Panel.ZIndex="1" Background="#00000000"/>
                                        <Label Content="Rank" HorizontalAlignment="Left" Margin="194,58,0,0" VerticalAlignment="Top" Foreground="White" Width="65" FontWeight="Bold"/>
                                        <Label x:Name="lblUserRank" Content="-" HorizontalAlignment="Left" Margin="264,57,0,0" VerticalAlignment="Top" Foreground="White" Width="65"/>
                                        <Label Content="Score" HorizontalAlignment="Left" Margin="194,87,0,0" VerticalAlignment="Top" Foreground="White" Width="65" FontWeight="Bold"/>
                                        <Label x:Name="lblUserScore" Content="-" HorizontalAlignment="Left" Margin="259,87,0,0" VerticalAlignment="Top" Foreground="White" Width="65" FontWeight="Bold"/>
                                    </Grid>
                                </GroupBox>

                                <GroupBox Header="Last Game Played" Margin="10,0,10,10" HorizontalAlignment="Left">
                                    <Grid x:Name="grdLastPlayedGame" Height="Auto" Width="Auto"/>
                                </GroupBox>
                            </StackPanel>
                            <GroupBox Header="Recent Achievements" Margin="10,0,10,10" HorizontalAlignment="Left">
                                <WrapPanel x:Name="wrpRecentAchievements" Height="Auto" Width="Auto">
                                    <WrapPanel.Resources>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Margin" Value="10,10" />
                                        </Style>
                                    </WrapPanel.Resources>
                                </WrapPanel>
                            </GroupBox>


                            <GroupBox Header="Recently Played Games" Margin="10,0,10,10" HorizontalAlignment="Left">
                                <WrapPanel x:Name="wrpRecentlyPlayed" Height="Auto" Width="Auto">
                                    <WrapPanel.Resources>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="Margin" Value="10,10" />
                                        </Style>
                                    </WrapPanel.Resources>
                                </WrapPanel>
                            </GroupBox>





                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Selector.Selected="tabConsoles_Selected" Style="{StaticResource tabStylings}" x:Name="tabConsoles" Header="Consoles" Margin="0,0,0,0" Height="50" Width="150" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                    <DockPanel x:Name="bgConsoles" Margin="0" Background="#FF00575A" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" >

                        <Border DockPanel.Dock="Top" BorderBrush="White" Padding="10" Margin="10" BorderThickness="2">
                            <Label Content="Available Consoles" Foreground="White" HorizontalContentAlignment="Center"/>
                        </Border>

                        <Border DockPanel.Dock="Right" Width="500" Panel.ZIndex="1" Margin="10" HorizontalAlignment="Right" Padding="10" UseLayoutRounding="True" BorderThickness="2" BorderBrush="White" >
                            <StackPanel>
                                <Image x:Name="imgConsole" Height="200" Source="Resources/Consoles/gba.png"/>
                                <Label x:Name="lblConsoleName" HorizontalContentAlignment="Center" Content="Console Name" Foreground="White" FontWeight="SemiBold" FontSize="20"/>

                                <Separator Margin="0,20" />
                                <WrapPanel>
                                    <Label Content="Games" HorizontalContentAlignment="Center" Foreground="White" Width="200" FontWeight="Bold" />
                                    <Label x:Name="lblConsoleGamesCount" Content="-" HorizontalContentAlignment="Center" Foreground="White" Width="200" />
                                </WrapPanel>
                                <WrapPanel/>
                                <Button x:Name="btnDownloadConsoleGames" Content="Download Games" VerticalAlignment="Bottom" Height="39" Margin="10" Click="btnDownloadConsoleGames_Click"/>

                            </StackPanel>
                        </Border>

                        <Border DockPanel.Dock="Left"  BorderBrush="White" Margin="10" BorderThickness="2" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <DataGrid x:Name="dgConsoleList"
                                              Margin="10,0,10,10" 
                                              SelectionChanged="dgConsoleList_SelectionChanged" 
                                              Panel.ZIndex="1" SelectionMode="Single" 
                                              Background="Transparent" 
                                              Sorting="dgConsoleList_Sorting"       
                                              ScrollViewer.CanContentScroll="True" 
                                              ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                              ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                              Style="{DynamicResource DataGridStyle1}" 
                                              RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}" 
                                              MouseDoubleClick="dgConsoleList_MouseDoubleClick" IsReadOnly="True">
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="Background" Value="Gainsboro" />
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="*" Binding="{Binding ConsoleName}" Header="Name"/>
                                    <DataGridTextColumn Width="60" Binding="{Binding GamesCount}" Header="Games"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>

                    </DockPanel>
                </TabItem>

                <TabItem Selector.Selected="tabGames_Selected" Style="{DynamicResource tabStylings}" x:Name="tabGames" Header="Games" Margin="0,0,0,0" Height="50" Width="150" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                    <DockPanel x:Name="bgGames" Margin="0" Background="#FF00575A" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" >


                        <Border DockPanel.Dock="Top" BorderBrush="White" Padding="10" Margin="10" BorderThickness="2">
                            <Label Content="Available Games" Foreground="White" HorizontalContentAlignment="Center"/>
                        </Border>



                        <Border DockPanel.Dock="Right" Width="500" Panel.ZIndex="1" Margin="10" HorizontalAlignment="Right" Padding="10" UseLayoutRounding="True" BorderThickness="2" BorderBrush="White"  >
                            <DockPanel>
                                <StackPanel DockPanel.Dock="Top">
                                    <Image x:Name="imgGame" Height="532"/>
                                </StackPanel>
                                
                                <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                                    <Label x:Name="lblGameTitle" HorizontalContentAlignment="Center" Content="Game Title" Foreground="White" FontWeight="SemiBold" FontSize="20" Margin="0,20,0,10"/>

                                    <WrapPanel VerticalAlignment="Bottom">
                                        <Label Content="Developer" HorizontalContentAlignment="Center" Foreground="White" Width="180" FontWeight="Bold" />
                                        <Label x:Name="lblGames_Developer" Content="-" HorizontalContentAlignment="Center" Foreground="White" Width="240" />
                                    </WrapPanel>
                                    <WrapPanel VerticalAlignment="Bottom">
                                        <Label Content="Released" HorizontalContentAlignment="Center" Foreground="White" Width="180" FontWeight="Bold" />
                                        <Label x:Name="lblGames_Released" Content="-" HorizontalContentAlignment="Center" Foreground="White" Width="240" />
                                    </WrapPanel>
                                    <WrapPanel VerticalAlignment="Bottom">
                                        <Label Content="Publisher" HorizontalContentAlignment="Center" Foreground="White" Width="180" FontWeight="Bold" />
                                        <Label x:Name="lblGames_Publisher" Content="-" HorizontalContentAlignment="Center" Foreground="White" Width="240" />
                                    </WrapPanel>
                                </StackPanel>
                                
                            </DockPanel>
                        </Border>

                        <Border DockPanel.Dock="Left"  BorderBrush="White" Margin="10" BorderThickness="2" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">

                            <Grid ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">

                                <DataGrid x:Name="dgGames" 
                                      Panel.ZIndex="1" 
                                      SelectionMode="Single" 
                                      Background="Transparent" 
                                      Sorting="dgConsoleList_Sorting"       
                                      ScrollViewer.CanContentScroll="True" 
                                      ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                      Style="{DynamicResource DataGridStyle1}" 
                                      RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}" 
                                      IsReadOnly="True" 
                                      HorizontalContentAlignment="Stretch" 
                                      VerticalContentAlignment="Stretch" 
                                      Grid.IsSharedSizeScope="True" 
                                      MouseDoubleClick="dgGames_MouseDoubleClick" 
                                      SelectionChanged="dgGames_SelectionChanged"
                                      >
                                    <DataGrid.RowStyle>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True" >
                                                    <Setter Property="Background" Value="Gainsboro" />
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>
                                </DataGrid>

                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <WrapPanel x:Name="wrapGames" Panel.ZIndex="1" Margin="5" Background="#00FF0000" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" />
                                </ScrollViewer>

                                <TextBlock x:Name="txtblkNoGames" TextWrapping="WrapWithOverflow" Foreground="White" Margin="20">
                                                Not all consoles have their games registered in the database yet. <LineBreak/> <LineBreak/>
                                               If you're interested in becoming an achievement developer visit the Getting Start Guide at: <LineBreak/> 
                                                <LineBreak/>
                                        <Hyperlink NavigateUri="https://docs.retroachievements.org/How-to-Become-an-Achievement-Developer/">
                                          https://docs.retroachievements.org/How-to-Become-an-Achievement-Developer/
                                        </Hyperlink>
                                </TextBlock>

                            </Grid>
                        </Border>

                    </DockPanel>
                </TabItem>

                <TabItem Selector.Selected="tabAchievements_Selected" Style="{DynamicResource tabStylings}" x:Name="tabAchievements" Header="Achievements" Margin="0,0,0,0" Height="50" Width="150">
                    <DockPanel x:Name="bgAchievements" Margin="0" Background="#FF00575A" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" >

                        <StackPanel DockPanel.Dock="Right" >
                            <Border DockPanel.Dock="Right" Width="500" Panel.ZIndex="1" Margin="10" HorizontalAlignment="Right" Padding="10" UseLayoutRounding="True" BorderThickness="2" BorderBrush="White" >
                                <StackPanel VerticalAlignment="Top">
                                    <Image x:Name="imgGameBoxArt" Height="200" />
                                    <Label x:Name="lblSelectedGameTitle" HorizontalContentAlignment="Center" Content="Game Title" Foreground="White" FontWeight="SemiBold" FontSize="20"/>

                                    <ProgressBar x:Name="pbAchievementsTotal" Height="30" Margin="20,10,20,10" />
                                </StackPanel>
                            </Border>

                            <Border Width="500" Panel.ZIndex="1" Margin="10" HorizontalAlignment="Right" Padding="10" UseLayoutRounding="True" BorderThickness="2" BorderBrush="White" >

                                <StackPanel VerticalAlignment="Top">
                                    <Image x:Name="imgSelectedAchievementBadge" Height="200" />
                                    <Label x:Name="lblSelectedAchievementTitle" HorizontalContentAlignment="Center" Content="Achievement Title" Foreground="White" FontWeight="SemiBold" FontSize="20"/>

                                    <Separator Margin="0,20" />
                                    <Label x:Name="lblAchievementDescription" Foreground="White" Margin="0,0,0,20" FontStyle="Italic" />
                                    <WrapPanel>
                                        <Label Content="Date Earned:" HorizontalContentAlignment="Right" Foreground="White" Width="200" FontWeight="Bold" />
                                        <Label x:Name="lblDateEarned" Content="-" Foreground="White" Width="240" />
                                    </WrapPanel>
                                    <WrapPanel>
                                        <Label Content="Date Hardcore Earned:" HorizontalContentAlignment="Right" Foreground="White" Width="200" FontWeight="Bold" />
                                        <Label x:Name="lblDateHardcore" Content="-" Foreground="White" Width="240" />
                                    </WrapPanel>
                                    <WrapPanel>
                                        <Label Content="Author:" HorizontalContentAlignment="Right" Foreground="White" Width="200" FontWeight="Bold" />
                                        <Label x:Name="lblAuthor" Content="-" Foreground="White" Width="240" />
                                    </WrapPanel>
                                    <WrapPanel>
                                        <Label Content="Points:" HorizontalContentAlignment="Right" Foreground="White" Width="200" FontWeight="Bold" />
                                        <Label x:Name="lblPoints" Content="-" Foreground="White" Width="240" />
                                    </WrapPanel>
                                    <WrapPanel>
                                        <Label Content="Total Awarded:" HorizontalContentAlignment="Right" Foreground="White" Width="200" FontWeight="Bold" />
                                        <Label x:Name="lblNumAwarded" Content="-" Foreground="White" Width="240" />
                                    </WrapPanel>
                                    <WrapPanel>
                                        <Label Content="Hardcore Awarded:" HorizontalContentAlignment="Right" Foreground="White" Width="200" FontWeight="Bold" />
                                        <Label x:Name="lblNumAwardedHardcore" Content="-" Foreground="White" Width="240" />
                                    </WrapPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <Border DockPanel.Dock="Top" BorderBrush="White" Padding="10" Margin="10" BorderThickness="2">
                            <Label Content="Achievements" Foreground="White" HorizontalContentAlignment="Center"/>
                        </Border>

                        <Grid DockPanel.Dock="Left" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                            <Border BorderBrush="White" Margin="10" BorderThickness="2" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">

                                <Grid>

                                    <DataGrid x:Name="dgAchievementList"
                                              Margin="10,0,10,10" 
                                              Panel.ZIndex="1" SelectionMode="Single" 
                                              Background="Transparent"       
                                              ScrollViewer.CanContentScroll="True" 
                                              ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                              ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                              Style="{DynamicResource DataGridStyle1}" 
                                              RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}" IsReadOnly="True" SelectionChanged="dgAchievementList_SelectionChanged">
                                        <DataGrid.RowStyle>
                                            <Style TargetType="{x:Type DataGridRow}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True" >
                                                        <Setter Property="Background" Value="Gainsboro" />
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>
                                    </DataGrid>

                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <WrapPanel x:Name="wrapAchievements" Margin="5">
                                        </WrapPanel>
                                    </ScrollViewer>

                                    <TextBlock x:Name="txtblkNoAchievements" TextWrapping="WrapWithOverflow" Foreground="White" Margin="20">
                                    No game data found.
                                    <LineBreak/>
                                    <LineBreak/>
                                    <Button x:Name="btnDownloadGameAchievements" Content="Download Game Data" VerticalAlignment="Bottom" Height="39" Margin="100,10,10,10" Click="btnDownloadGameAchievements_Click" HorizontalAlignment="Center"/>
                                    <LineBreak/>
                                    <LineBreak/>                                    
                                    
                                                Not all games have achievements yet. <LineBreak/> <LineBreak/>
                                               If you're interested in creating achievements for this game visit the Getting Start Guide at: <LineBreak/> 
                                                <LineBreak/>
                                        <Hyperlink NavigateUri="https://docs.retroachievements.org/How-to-Become-an-Achievement-Developer/">
                                          https://docs.retroachievements.org/How-to-Become-an-Achievement-Developer/
                                        </Hyperlink>
                                    </TextBlock>
                                </Grid>

                            </Border>
                        </Grid>



                    </DockPanel>
                </TabItem>

                <TabItem Selector.Selected="tabLeaderBoard_Selected" Style="{DynamicResource tabStylings}" x:Name="tabLeaderBoard" Header="Leader Board" Margin="0,0,0,0" Height="50" Width="150">
                    <ScrollViewer HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="#FF00575A">
                        <StackPanel x:Name="stackLeaderBoard" Margin="0"></StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Selector.Selected="tabSettings_Selected" Style="{DynamicResource tabStylings}" x:Name="tabSettings" Header="Settings" Margin="0,0,0,0" Height="50" Width="150">
                    <ScrollViewer HorizontalContentAlignment="Left">
                        <StackPanel x:Name="bgSettings" ScrollViewer.VerticalScrollBarVisibility="Auto" CanVerticallyScroll="True" ScrollViewer.CanContentScroll="True" Background="#FF00575A">

                            <GroupBox Header="Account Details" Margin="20,20,0,20" Width="495" HorizontalAlignment="Left">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Username" HorizontalAlignment="Right" Margin="14,13,0,0" Width="100" Foreground="White" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <TextBox x:Name="txtSettingsUsername" Margin="20,18,0,0" TextWrapping="Wrap" Text="RuggedRadius" Foreground="White" Background="Transparent" Width="315" Height="25" HorizontalAlignment="Left"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="API Key" HorizontalAlignment="Right" Margin="14,20,0,0" VerticalAlignment="Top" Width="100" Foreground="White" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <PasswordBox x:Name="txtSettingsAPIKey" Margin="20,20,0,0" Password="B28aNhBWut5BmBmIbsYrFPdpUJoa2Dmt" Background="Transparent" Foreground="White"/>
                                    </StackPanel>
                                    <Button x:Name="btnSaveCredentials" Margin="200,20" Click="btnSaveCredentials_Click">Save</Button>
                                </StackPanel>
                            </GroupBox>


                            <GroupBox Header="Data File Handling" Margin="20,20,0,20" FontWeight="Bold" Width="300" HorizontalAlignment="Left">
                                <StackPanel>
                                    <CheckBox x:Name="chkLoadOnStartup" Content="Load data file on startup" Foreground="White" FontWeight="Normal" Margin="20,20,20,10"/>
                                    <CheckBox x:Name="chkSaveOnShutdown" Content="Save data file on shutdown" Foreground="White" FontWeight="Normal" Margin="20,10,20,20"/>

                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="Search" Margin="20,20,0,20" FontWeight="Bold" Width="300" HorizontalAlignment="Left">
                                <StackPanel>
                                    <CheckBox x:Name="chkExactMatchesOnly" Content="Find only exact matches" IsChecked="True" Foreground="White" FontWeight="Normal" Margin="20"/>
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="Colour Settings [Alpha]" Margin="20,20,0,20" FontWeight="Bold" Width="500" HorizontalAlignment="Left">
                                <StackPanel Margin="20">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Theme Colour Primary:" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Normal"/>
                                        <xctk:ColorPicker x:Name="cpPrimaryColour" Margin="15" Width="201" SelectedColorChanged="cpPrimaryColour_SelectedColorChanged" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Theme Colour Secondary:" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Normal"/>
                                        <xctk:ColorPicker x:Name="cpSecondaryColour" Margin="15" Width="202" SelectedColorChanged="cpSecondaryColour_SelectedColorChanged" >
                                        </xctk:ColorPicker>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Border Colour:" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Normal"/>
                                        <xctk:DropDownButton Content="Select..." Margin="15" >
                                            <xctk:DropDownButton.DropDownContent>
                                                <xctk:ColorCanvas />
                                            </xctk:DropDownButton.DropDownContent>
                                        </xctk:DropDownButton>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>





                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

            </TabControl>

            <StatusBar x:Name="statBarMain" VerticalAlignment="Bottom" Background="Teal" Visibility="Hidden">
                <Label x:Name="lblStatus" Content="Label" Width="350" Foreground="#FF00CBCB" FontFamily="Bahnschrift Light"/>
                <ProgressBar x:Name="pbMain" Width="352" Height="25"  />
            </StatusBar>
        </Grid>
    </Grid>
</Window>
